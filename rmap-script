
Map for plotting sampling locations / pluvial information in Uganda

```R
#=========================
#
# Map of locations in Tilapia
#
# Jenny Nascimento-Schulze
#
# Roslin 2022
#
#======================================

## Load packages

#install.packages("installr")
#library(installr)
#updateR()

lib = c("ggplot2","RColorBrewer","mapdata","ggrepel","rworldmap","rworldxtra",
        "rgdal","cowplot")
lapply(lib, library, character.only=TRUE)
#+
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggsn)
library(ggspatial)
library(ggrepel)
library(devtools)

devtools::install_github("ropensci/rnaturalearthhires")

## Import maps from online repository

library(sf)
library(rnaturalearthhires)

#world lakes

url <- paste0("https://www.naturalearthdata.com/",
              "http//www.naturalearthdata.com/download/10m/physical/",
              "ne_10m_lakes.zip")

path <- tempdir()
download.file(url, paste0(path, "/lakes.zip"))
unzip(paste0(path, "/lakes.zip"))
lakes <- read_sf("ne_10m_lakes.shp")

#pluvial lakes - not needed for this map but in case I ever need it

url <- paste0("https://www.naturalearthdata.com/",
              "http//www.naturalearthdata.com/download/10m/physical/",
              "ne_10m_lakes_pluvial.zip")

path <- tempdir()
download.file(url, paste0(path, "/lakes_pluvial.zip"))
unzip(paste0(path, "/lakes_pluvial.zip"))
lakes2 <- read_sf("ne_10m_lakes_pluvial.shp")

#historic lakes - not needed for this map
url <- paste0("https://www.naturalearthdata.com/",
              "http//www.naturalearthdata.com/download/10m/physical/",
              "ne_10m_lakes_historic.zip")

path <- tempdir()
download.file(url, paste0(path, "/lakes_historic.zip"))
unzip(paste0(path, "/lakes_historic.zip"))
lakes3 <- read_sf("ne_10m_lakes_historic.shp")

#dowloaded uganda dataset from https://geoportal.icpac.net/layers/geonode:uga_water_areas_dcw
#if you want more detailed rivers and other any vector data we can get it there
lakes4 <- read_sf("uga_water_areas_dcw.shp")

st_drivers
#rivers and lakes centerlines
#again we can add the detailed dataset for uganda but there are many rivers.. I think this one is fine

url <- paste0("https://www.naturalearthdata.com/",
              "http//www.naturalearthdata.com/download/10m/physical/",
              "ne_10m_rivers_lake_centerlines.zip")

path <- tempdir()
download.file(url, paste0(path, "/rivers_lake_centerlines.zip"))
unzip(paste0(path, "/rivers_lake_centerlines.zip"))
rivers <- read_sf("ne_10m_rivers_lake_centerlines.shp")
read_sf()

#world dataset
world <- rnaturalearth::ne_countries(scale = "large",
                                     returnclass = "sf")
#pull africa dataset

africa <- ne_countries(continent = "Africa", returnclass = "sf")
uganda2 <- ne_countries(country ="Uganda", returnclass = "sf")
uganda <- read_sf("uga_adm0.shp")


#another example of importing the data for lakes (world general coverage) if needed
#lakes <- rnaturalearth::ne_download(scale = 110,
#                                    type = 'lakes',
#                                   category = 'physical') %>%
#  sf::st_as_sf(lakes110, crs = 4269)
#
#rivers110 <- ne_download(
#  scale = 110,
#  type = "rivers_lake_centerlines",
#  category = "physical",
#  returnclass = "sf"
#)



#import coorinate dataset

# Dataframe containing lat and long of points
coord_all = read.csv("coordinates.csv", head=TRUE)
head(coord_all)
colnames(coord_all)[3]  <- "Lat"
colnames(coord_all)[4]  <- "Lon"
## Import scalebar function
source("scalebar_function.R")
eco_colours = c("red","yellow","blue")


##########################################################
#####################plotting data########################
##########################################################

library(ggplot2)

#-------------------------------------------------#
# # Plot basic map of fine scale sampling sites # #  
##-----------------------------------------------##

zoomed <- ggplot() +
  geom_sf(data = africa, #africa
          mapping = aes(geometry = geometry),
          color = "white",
          fill = "white")  +
  geom_sf(data = uganda, #africa
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightgray")  +

  geom_sf(data = rivers, #main rivers
          mapping = aes(geometry = geometry),
          color = "lightblue",
          fill = "lightblue")  +
 
  geom_sf(data = lakes, #main lakes (global)
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightblue")  +
 
  geom_sf(data = lakes4, #uganda lakes
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightblue")  +
 
  geom_point(data=subset(coord_all), aes(x=Lon, y=Lat),
             fill = "lightyellow", shape=21, size=3, show.legend=TRUE) +
  geom_label_repel(data=subset(coord_all),
                   aes(x=Lon, y=Lat, label=location),
                   size=4,
                   colour = "black",
                   fill= "#2C77BF",
                   segment.size=0.5, segment.colour="black", force=3,
                   box.padding = unit(0.1, "lines"),
                   point.padding= unit(0.1, "line"),
                   min.segment.length = unit(0.1, "lines"),
                   max.overlaps = 40) +
 
  coord_sf(ylim = c(-3, 4),
           xlim = c(25, 35),
           expand = TRUE) +
  annotation_scale(location = "bl",
                   width_hint = 0.25,
                   text_cex = 1) +
  annotation_north_arrow(location = "bl",
                         which_north = "true",
                         pad_x = unit(0.15, "in"),
                         pad_y = unit(0.3, "in"),
                         style = north_arrow_fancy_orienteering) +
  labs(x = "Longitude",
       y = "Latitude") +  
  theme_classic2() +
  theme(axis.line.y = element_blank(), axis.line.x = element_blank(),
        axis.text.x = element_text(size = 12, color = "black"),
        axis.text.y = element_text(size = 12, color = "black"),
        panel.grid.major = element_line(color = gray(0.5), linetype = "dashed", size = 0.5),
        panel.background = element_rect(fill = "lightblue"))



zoomed


#ggsave("lakes1.png", height=4, width=5, scale=2, dpi=500)

### ================================================= ###
# Add in an inset for the wider geographic positioning  #
### ================================================= ###



# code a wider regional map to inset for scaling
widemap=ggplot() +
  geom_sf(data = world,
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightgray")  +
 
  geom_sf(data = lakes,
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightblue")  +
 
 
  geom_sf(data = lakes4,
          mapping = aes(geometry = geometry),
          color = "gray",
          fill = "lightblue")  +
 
  geom_text(aes(x=20, y=20, label="AFRICA"), size=5) +
  coord_sf(xlim = c(-20,55),
           ylim = c(-35, 39),
           expand = TRUE) +
  geom_rect(aes(xmin=-6.85, xmax=-2.90, ymin=49.75, ymax=51.35),
            fill=NA, colour="lightgray", linetype=1, linewidth=0.2) +
  theme_classic() +
  theme(axis.line.y = element_blank(), axis.line.x = element_blank(),
        axis.text.x = element_text(size = 8, color = "black"),
        axis.text.y = element_text(size = 8, color = "black"),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid.major = element_line(color = gray(0.7), linetype = "dashed", size = 0.2),
        panel.background = element_rect(fill = "lightblue"),
        plot.background = element_rect(fill ="white"))
        #outside plot area
        # annotation_scale(location = "bl",
        #                   width_hint = 0.40,
        #                   text_cex = 1)
       
widemap
       
       
#######################################################################################
       
# Stick the two together to create our map figure
       
## Create sampling map by combining westcountry with UKinsetmap in a single map
#install.packages("cowplot")

library(cowplot)

       
       
zoomed +
  annotation_custom(
    grob = ggplotGrob(widemap),
    xmin=23.2,
    xmax=30.2,
    ymin=0.2,
    ymax=4.2)


ggsave("tilapia_final3.png", width=11, height=10, dpi=500)
#ggsave("tilapia_final.pdf", width=10, height=10)
       
# FIM! :D
```
